apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "mongodb.fullname" . }}
  labels:
    app: {{ template "mongodb.name" . }}
    chart: {{ template "mongodb.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ template "mongodb.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "mongodb.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command: ["mongo", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["mongo", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.path }}
              subPath: {{ .Values.persistence.subPath }}
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "mongodb.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
